{"remainingRequest":"/Users/muhammetmucahit/Desktop/Login-App-Auth0/node_modules/babel-loader/lib/index.js!/Users/muhammetmucahit/Desktop/Login-App-Auth0/node_modules/eslint-loader/index.js??ref--13-0!/Users/muhammetmucahit/Desktop/Login-App-Auth0/src/auth/authService.js","dependencies":[{"path":"/Users/muhammetmucahit/Desktop/Login-App-Auth0/src/auth/authService.js","mtime":1571397918647},{"path":"/Users/muhammetmucahit/Desktop/Login-App-Auth0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/muhammetmucahit/Desktop/Login-App-Auth0/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/muhammetmucahit/Desktop/Login-App-Auth0/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Date$now from \"/Users/muhammetmucahit/Desktop/Login-App-Auth0/node_modules/@babel/runtime-corejs2/core-js/date/now\";\nimport _Promise from \"/Users/muhammetmucahit/Desktop/Login-App-Auth0/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"/Users/muhammetmucahit/Desktop/Login-App-Auth0/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/muhammetmucahit/Desktop/Login-App-Auth0/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/muhammetmucahit/Desktop/Login-App-Auth0/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/muhammetmucahit/Desktop/Login-App-Auth0/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/muhammetmucahit/Desktop/Login-App-Auth0/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/muhammetmucahit/Desktop/Login-App-Auth0/node_modules/@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"/Users/muhammetmucahit/Desktop/Login-App-Auth0/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es7.promise.finally\";\nimport auth0 from \"auth0-js\";\nimport { EventEmitter } from \"events\";\nimport authConfig from \"../../auth_config.json\";\nvar webAuth = new auth0.WebAuth({\n  domain: authConfig.domain,\n  redirectUri: \"\".concat(window.location.origin, \"/callback\"),\n  clientID: authConfig.clientId,\n  responseType: \"token id_token\",\n  scope: \"openid profile email\",\n  audience: authConfig.audience\n});\nvar localStorageKey = \"loggedIn\";\nvar loginEvent = \"loginEvent\";\n\nvar AuthService =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(AuthService, _EventEmitter);\n\n  function AuthService() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AuthService);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AuthService)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"idToken\", null);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"accessToken\", null);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"profile\", null);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"tokenExpiry\", null);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"accessTokenExpiry\", null);\n\n    return _this;\n  }\n\n  _createClass(AuthService, [{\n    key: \"login\",\n    value: function login(customState) {\n      webAuth.authorize({\n        appState: customState\n      });\n    }\n  }, {\n    key: \"logOut\",\n    value: function logOut() {\n      localStorage.removeItem(localStorageKey);\n      this.idToken = null;\n      this.accessToken = null;\n      this.tokenExpiry = null;\n      this.profile = null;\n      this.accessTokenExpiry = null;\n      webAuth.logout({\n        returnTo: \"\".concat(window.location.origin)\n      });\n      this.emit(loginEvent, {\n        loggedIn: false\n      });\n    }\n  }, {\n    key: \"handleAuthentication\",\n    value: function handleAuthentication() {\n      var _this2 = this;\n\n      return new _Promise(function (resolve, reject) {\n        webAuth.parseHash(function (err, authResult) {\n          if (err) {\n            _this2.emit(loginEvent, {\n              loggedIn: false,\n              error: err,\n              errorMsg: err.statusText\n            });\n\n            reject(err);\n          } else {\n            _this2.localLogin(authResult);\n\n            resolve(authResult.idToken);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      return _Date$now() < this.tokenExpiry && localStorage.getItem(localStorageKey) === \"true\";\n    }\n  }, {\n    key: \"isIdTokenValid\",\n    value: function isIdTokenValid() {\n      return this.idToken && this.tokenExpiry && _Date$now() < this.tokenExpiry;\n    }\n  }, {\n    key: \"isAccessTokenValid\",\n    value: function isAccessTokenValid() {\n      return this.accessToken && this.accessTokenExpiry && _Date$now() < this.accessTokenExpiry;\n    }\n  }, {\n    key: \"getIdToken\",\n    value: function getIdToken() {\n      var _this3 = this;\n\n      return new _Promise(function (resolve, reject) {\n        if (_this3.isIdTokenValid()) {\n          resolve(_this3.idToken);\n        } else if (_this3.isAuthenticated()) {\n          _this3.renewTokens().then(function (authResult) {\n            resolve(authResult.idToken);\n          }, reject(\"Unable to renew authentication\"));\n        } else {\n          resolve();\n        }\n      });\n    }\n  }, {\n    key: \"getAccessToken\",\n    value: function getAccessToken() {\n      var _this4 = this;\n\n      return new _Promise(function (resolve, reject) {\n        if (_this4.isAccessTokenValid()) {\n          resolve(_this4.accessToken);\n        } else {\n          _this4.renewTokens().then(function (authResult) {\n            resolve(authResult.accessToken);\n          }, reject);\n        }\n      });\n    }\n  }, {\n    key: \"localLogin\",\n    value: function localLogin(authResult) {\n      this.idToken = authResult.idToken;\n      this.profile = authResult.idTokenPayload;\n      this.accessToken = authResult.accessToken; // Convert the expiry time from seconds to milliseconds,\n      // required by the Date constructor\n\n      this.tokenExpiry = new Date(this.profile.exp * 1000); // Convert expiresIn to milliseconds and add the current time\n      // (expiresIn is a relative timestamp, we want an absolute time)\n\n      this.accessTokenExpiry = new Date(_Date$now() + authResult.expiresIn * 1000);\n      localStorage.setItem(localStorageKey, \"true\");\n      this.emit(loginEvent, {\n        loggedIn: true,\n        profile: authResult.idTokenPayload,\n        state: authResult.appState || {}\n      });\n    }\n  }, {\n    key: \"renewTokens\",\n    value: function renewTokens() {\n      var _this5 = this;\n\n      return new _Promise(function (resolve, reject) {\n        if (localStorage.getItem(localStorageKey) !== \"true\") {\n          return reject(\"Not logged in\");\n        }\n\n        webAuth.checkSession({}, function (err, authResult) {\n          if (err) {\n            reject(err);\n          } else {\n            _this5.localLogin(authResult);\n\n            resolve(authResult);\n          }\n        });\n      });\n    }\n  }]);\n\n  return AuthService;\n}(EventEmitter);\n\nvar service = new AuthService();\nservice.setMaxListeners(5);\nexport default service;",{"version":3,"sources":["/Users/muhammetmucahit/Desktop/Login-App-Auth0/src/auth/authService.js"],"names":["auth0","EventEmitter","authConfig","webAuth","WebAuth","domain","redirectUri","window","location","origin","clientID","clientId","responseType","scope","audience","localStorageKey","loginEvent","AuthService","customState","authorize","appState","localStorage","removeItem","idToken","accessToken","tokenExpiry","profile","accessTokenExpiry","logout","returnTo","emit","loggedIn","resolve","reject","parseHash","err","authResult","error","errorMsg","statusText","localLogin","getItem","isIdTokenValid","isAuthenticated","renewTokens","then","isAccessTokenValid","idTokenPayload","Date","exp","expiresIn","setItem","state","checkSession","service","setMaxListeners"],"mappings":"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","sourcesContent":["import auth0 from \"auth0-js\";\nimport { EventEmitter } from \"events\";\nimport authConfig from \"../../auth_config.json\";\n\nconst webAuth = new auth0.WebAuth({\n    domain: authConfig.domain,\n    redirectUri: `${window.location.origin}/callback`,\n    clientID: authConfig.clientId,\n    responseType: \"token id_token\",\n    scope: \"openid profile email\",\n    audience: authConfig.audience\n});\n\nconst localStorageKey = \"loggedIn\";\nconst loginEvent = \"loginEvent\";\n\nclass AuthService extends EventEmitter {\n    idToken = null;\n    accessToken = null;\n    profile = null;\n    tokenExpiry = null;\n    accessTokenExpiry = null;\n\n    login(customState) {\n        webAuth.authorize({\n            appState: customState\n        });\n    }\n\n    logOut() {\n        localStorage.removeItem(localStorageKey);\n\n        this.idToken = null;\n        this.accessToken = null;\n        this.tokenExpiry = null;\n        this.profile = null;\n        this.accessTokenExpiry = null;\n\n        webAuth.logout({\n            returnTo: `${window.location.origin}`\n        });\n\n        this.emit(loginEvent, { loggedIn: false });\n    }\n\n    handleAuthentication() {\n        return new Promise((resolve, reject) => {\n            webAuth.parseHash((err, authResult) => {\n                if (err) {\n                    this.emit(loginEvent, {\n                        loggedIn: false,\n                        error: err,\n                        errorMsg: err.statusText\n                    });\n                    reject(err);\n                } else {\n                    this.localLogin(authResult);\n                    resolve(authResult.idToken);\n                }\n            });\n        });\n    }\n\n    isAuthenticated() {\n        return (\n            Date.now() < this.tokenExpiry &&\n            localStorage.getItem(localStorageKey) === \"true\"\n        );\n    }\n\n    isIdTokenValid() {\n        return (\n            this.idToken &&\n            this.tokenExpiry &&\n            Date.now() < this.tokenExpiry\n        );\n    }\n\n    isAccessTokenValid() {\n        return (\n            this.accessToken &&\n            this.accessTokenExpiry &&\n            Date.now() < this.accessTokenExpiry\n        );\n    }\n\n    getIdToken() {\n        return new Promise((resolve, reject) => {\n            if (this.isIdTokenValid()) {\n                resolve(this.idToken);\n            } else if (this.isAuthenticated()) {\n                this.renewTokens().then(authResult => {\n                    resolve(authResult.idToken);\n                }, reject(\"Unable to renew authentication\"));\n            } else {\n                resolve();\n            }\n        });\n    }\n\n    getAccessToken() {\n        return new Promise((resolve, reject) => {\n            if (this.isAccessTokenValid()) {\n                resolve(this.accessToken);\n            } else {\n                this.renewTokens().then(authResult => {\n                    resolve(authResult.accessToken);\n                }, reject);\n            }\n        });\n    }\n\n    localLogin(authResult) {\n        this.idToken = authResult.idToken;\n        this.profile = authResult.idTokenPayload;\n\n        this.accessToken = authResult.accessToken;\n\n        // Convert the expiry time from seconds to milliseconds,\n        // required by the Date constructor\n        this.tokenExpiry = new Date(this.profile.exp * 1000);\n\n        // Convert expiresIn to milliseconds and add the current time\n        // (expiresIn is a relative timestamp, we want an absolute time)\n        this.accessTokenExpiry = new Date(Date.now() + authResult.expiresIn * 1000);\n\n        localStorage.setItem(localStorageKey, \"true\");\n\n        this.emit(loginEvent, {\n            loggedIn: true,\n            profile: authResult.idTokenPayload,\n            state: authResult.appState || {}\n        });\n    }\n\n    renewTokens() {\n        return new Promise((resolve, reject) => {\n            if (localStorage.getItem(localStorageKey) !== \"true\") {\n                return reject(\"Not logged in\");\n            }\n\n            webAuth.checkSession({}, (err, authResult) => {\n                if (err) {\n                    reject(err);\n                } else {\n                    this.localLogin(authResult);\n                    resolve(authResult);\n                }\n            });\n        });\n    }\n}\n\nconst service = new AuthService();\nservice.setMaxListeners(5);\n\nexport default service;"]}]}